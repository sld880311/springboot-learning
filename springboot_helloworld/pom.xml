<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<groupId>com.sunld</groupId>
	<artifactId>springboot_helloworld</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<packaging>jar</packaging>

	<name>springboot_helloworld</name>
	<description>first springboot demo</description>

	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>2.0.0.RELEASE</version>
		<relativePath/> <!-- lookup parent from repository -->
	</parent>

	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
		<java.version>1.8</java.version>
	</properties>

	<dependencies>
		<!-- spring-boot-starter：核心模块，包括自动配置支持、日志和YAML；-->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter</artifactId>
		</dependency>
		<!-- spring-boot-starter-test：测试模块，包括JUnit、Hamcrest、Mockito。 -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
		</dependency>
		<!-- 增加web依赖包 -->
		<dependency>
        	<groupId>org.springframework.boot</groupId>
        	<artifactId>spring-boot-starter-web</artifactId>
	 	</dependency>
	 	<!-- 自动部署依赖 -->
	 	<dependency>
        	<groupId>org.springframework.boot</groupId>
        	<artifactId>spring-boot-devtools</artifactId>
        	<!-- 表示依赖不会传递 -->
        	<optional>true</optional> 
    	</dependency>
	</dependencies>

	<build>
		<plugins>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
				<configuration>
            		<fork>true</fork> <!-- 如果没有该配置，devtools不会生效 -->
        		</configuration>
			</plugin>
		</plugins>
	</build>
	
	<!-- 
		可以通过maven的setting.xml配置文件和pom.xml文件配置第三方的仓库完成依赖包的加速下载
    -->
	
	<!-- 由于在阿里仓库中，spring-boot-starter-parent 2.0.0.RELEASE 
		   版本的pom文件不存在，所以增加spring的maven库，如果后续阿里仓库中存在则可以删除spring的仓库
	 -->
	<!-- <repositories>
		<repository>
        	<id>spring-snapshots</id>
        	<name>Spring Snapshots</name>
        	<url>https://repo.spring.io/libs-snapshot</url>
        	<snapshots>
            	<enabled>true</enabled>
        	</snapshots>
    	</repository>
	</repositories> -->
	<!-- <repositories>
        <repository>
            <id>aliyun</id>
            <name>aliyun maven</name>
            <url>http://maven.aliyun.com/nexus/content/groups/public/</url>
        </repository>
    </repositories>
    <pluginRepositories>
        <pluginRepository>
            <id>aliyun</id>
            <name>aliyun maven</name>
            <url>http://maven.aliyun.com/nexus/content/groups/public/</url>
        </pluginRepository>
    </pluginRepositories> -->

</project>
